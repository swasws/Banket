// src/pages/HomePage.js
import React, { useRef, useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import axios from 'axios';
import './HomePage.css';

const cities = [
  { name: "–ë–∏—à–∫–µ–∫", description: "–°—Ç–æ–ª–∏—Ü–∞ —Å –ª—É—á—à–∏–º–∏ –∑–∞–ª–∞–º–∏.", image: "/images/bishkek.jpg" },
  { name: "–û—à", description: "–¢–µ–ø–ª—ã–π —é–≥ –∏ –≥–æ—Å—Ç–µ–ø—Ä–∏–∏–º—Å—Ç–≤–æ.", image: "/images/osh.jpg" },
  { name: "–ß–æ–ª–ø–æ–Ω-–ê—Ç–∞", description: "–û—Ç–¥—ã—Ö –Ω–∞ –ò—Å—Å—ã–∫-–ö—É–ª–µ.", image: "/images/cholpon-ata.jpg" },
  { name: "–ö–∞—Ä–∞–∫–æ–ª", description: "–ì–æ—Ä—ã –∏ –ø—Ä–∏—Ä–æ–¥–∞.", image: "/images/karakol.jpg" },
  { name: "–¢–∞–ª–∞—Å", description: "–ò—Å—Ç–æ—Ä–∏—è –∏ –∫—É–ª—å—Ç—É—Ä–∞.", image: "/images/talas.jpg" },
  { name: "–ù–∞—Ä—ã–Ω", description: "–°–µ—Ä–¥—Ü–µ –≥–æ—Ä –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω–∞.", image: "/images/naryn.jpg" },
  { name: "–ë–∞—Ç–∫–µ–Ω", description: "–≠–∫–∑–æ—Ç–∏–∫–∞ —é–≥–∞.", image: "/images/batken.jpg" },
  { name: "–î–∂–∞–ª–∞–ª-–ê–±–∞–¥", description: "–ó–∞–ª—ã –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π.", image: "/images/jalal-abad.jpg" },
  { name: "–ö–∞—Ä–∞-–ë–∞–ª—Ç–∞", description: "–ë–ª–∏–∑–æ—Å—Ç—å –∫ —Å—Ç–æ–ª–∏—Ü–µ.", image: "/images/kara-balta.jpg" },
  { name: "–¢–æ–∫–º–æ–∫", description: "–£—é—Ç–Ω—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞.", image: "/images/tokmok.jpg" },
];

const HomePage = () => {
  const sliderRef = useRef(null);
  const navigate = useNavigate();

  const [city, setCity] = useState('');
  const [startDate, setStartDate] = useState('');
  const [endDate, setEndDate] = useState('');
  const [guests, setGuests] = useState('');
  const [latestHalls, setLatestHalls] = useState([]);

  const scrollLeft = () => {
    const slider = sliderRef.current;
    if (!slider) return;

    if (slider.scrollLeft <= 0) {
      slider.scrollTo({ left: slider.scrollWidth, behavior: 'smooth' });
    } else {
      slider.scrollBy({ left: -300, behavior: 'smooth' });
    }
  };

  const scrollRight = () => {
    const slider = sliderRef.current;
    if (!slider) return;

    const maxScrollLeft = slider.scrollWidth - slider.clientWidth;
    if (slider.scrollLeft >= maxScrollLeft - 10) {
      slider.scrollTo({ left: 0, behavior: 'smooth' });
    } else {
      slider.scrollBy({ left: 300, behavior: 'smooth' });
    }
  };

  const handleCityClick = (cityName) => {
    navigate(`/halls?cityName=${encodeURIComponent(cityName)}`);
  };

  const handleSearch = () => {
    const query = new URLSearchParams({
      cityName: city,
      start: startDate,
      end: endDate,
      guests: guests,
    }).toString();
    navigate(`/halls?${query}`);
  };

  useEffect(() => {
    const fetchLatestHalls = async () => {
      try {
        const res = await axios.get('http://127.0.0.1:8000/api/halls/');
        const sorted = res.data.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
        setLatestHalls(sorted.slice(0, 3));
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–ª–æ–≤:', error);
      }
    };

    fetchLatestHalls();
  }, []);

  return (
    <div className="home-page">
      <section className="hero">
        <div className="hero-logo-center">VenueFinder</div>

        <div className="hero-headline">
          <p>–ù–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –∑–¥–µ—Å—å</p>
          <h1>–ë–∞–Ω–∫–µ—Ç –º–µ—á—Ç—ã</h1>
        </div>

        <div className="hero-image-container">
          <img src="/images/hero-bed.jpg" alt="dream stay" className="hero-image" />
          <div className="hero-booking-bar">
            <div className="booking-item">
              <span>–ì–æ—Ä–æ–¥</span>
              <input
                type="text"
                value={city}
                onChange={(e) => setCity(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥"
              />
            </div>
            <div className="booking-item">
              <span>–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</span>
              <input
                type="date"
                value={startDate}
                onChange={(e) => setStartDate(e.target.value)}
              />
            </div>
            <div className="booking-item">
              <span>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</span>
              <input
                type="date"
                value={endDate}
                onChange={(e) => setEndDate(e.target.value)}
              />
            </div>
            <div className="booking-item">
              <span>–ì–æ—Å—Ç–∏</span>
              <input
                type="number"
                min="1"
                value={guests}
                onChange={(e) => setGuests(e.target.value)}
                placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"
              />
            </div>
            <button className="booking-search" onClick={handleSearch}>
              üîç
            </button>
          </div>
        </div>
      </section>

      <section className="cities-section">
        <h2>–ó–∞–ª—ã –≤ –≥–æ—Ä–æ–¥–∞—Ö</h2>
        <div className="slider-container">
          <button className="slider-button left" onClick={scrollLeft}>&#8592;</button>
          <div className="cities-slider" ref={sliderRef}>
            {cities.map((city, index) => (
              <div
                className="city-card"
                key={index}
                onClick={() => handleCityClick(city.name)}
              >
                <img src={city.image} alt={city.name} />
                <div className="city-info">
                  <h3>{city.name}</h3>
                  <p>{city.description}</p>
                </div>
              </div>
            ))}
          </div>
          <button className="slider-button right" onClick={scrollRight}>&#8594;</button>
        </div>
      </section>

      <section className="recommended-section">
        <h2>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∑–∞–ª—ã</h2>
        <div className="recommended-list">
          {latestHalls.map(hall => {
            const imageUrl = hall.image?.startsWith('http')
              ? hall.image
              : `http://127.0.0.1:8000${hall.image}`;
            return (
              <div className="recommended-card" key={hall.id}>
                <Link to={`/halls/${hall.id}`}>
                  <img src={imageUrl} alt={hall.name} />
                </Link>
                <div className="card-info">
                  <h3>
                    <Link to={`/halls/${hall.id}`}>{hall.name}</Link>
                  </h3>
                  <p className="location">{hall.city_name || '–ë–µ–∑ –≥–æ—Ä–æ–¥–∞'}</p>
                  <div className="price">–æ—Ç {hall.price || 0} —Å–æ–º</div>
                </div>
              </div>
            );
          })}

          <div className="recommended-cta">
            <h3>–ó–∞–ª—ã</h3>
            <p>–û—Ç–∫—Ä–æ–π—Ç–µ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</p>
            <button onClick={() => navigate('/halls')}>‚Üí</button>
          </div>
        </div>
      </section>

      <section className="testimonials-section">
        <h2>–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</h2>
        <div className="testimonials-list">
          <div className="testimonial-card">
            <p className="testimonial-text">
              ‚Äú–û—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å! –ù–∞—à—ë–ª –∏–¥–µ–∞–ª—å–Ω—ã–π –∑–∞–ª –¥–ª—è —Å–≤–∞–¥—å–±—ã –≤—Å–µ–≥–æ –∑–∞ 15 –º–∏–Ω—É—Ç. –û—á–µ–Ω—å —É–¥–æ–±–Ω–æ –∏ –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ.‚Äù
            </p>
            <div className="testimonial-author">‚Äî –ê–π—Å—É–ª—É—É –ê., –ë–∏—à–∫–µ–∫</div>
          </div>
          <div className="testimonial-card">
            <p className="testimonial-text">
              ‚ÄúVenueFinder –ø–æ–º–æ–≥ –º–Ω–µ –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –ø–ª–æ—â–∞–¥–∫—É –¥–ª—è –±–∏–∑–Ω–µ—Å-—Ñ–æ—Ä—É–º–∞. –í–ª–∞–¥–µ–ª—å—Ü—ã –æ—Ç–≤–µ—á–∞–ª–∏ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ!‚Äù
            </p>
            <div className="testimonial-author">‚Äî –¢–∏–º—É—Ä –ñ., –û—à</div>
          </div>
          <div className="testimonial-card">
            <p className="testimonial-text">
              ‚Äú–ú—ã –∞—Ä–µ–Ω–¥–æ–≤–∞–ª–∏ –∑–∞–ª –Ω–∞ –ò—Å—Å—ã–∫-–ö—É–ª–µ. –í—Å—ë –ø—Ä–æ—à–ª–æ –∏–¥–µ–∞–ª—å–Ω–æ ‚Äî –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ã–ª–æ –ø—Ä–æ—Å—Ç—ã–º –∏ –±—ã—Å—Ç—Ä—ã–º.‚Äù
            </p>
            <div className="testimonial-author">‚Äî –ê–ª–∏–Ω–∞ –ú., –ß–æ–ª–ø–æ–Ω-–ê—Ç–∞</div>
          </div>
        </div>
      </section>

      <section className="for-owners-section">
        <div className="owners-content">
          <div className="owners-text">
            <h2>–•–æ—Ç–∏—Ç–µ —Å–¥–∞—Ç—å –∑–∞–ª?</h2>
            <p>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ VenueFinder –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∑–∞—è–≤–∫–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è.</p>
          </div>
          <button className="owner-register-button" onClick={() => navigate('/owner/register')}>
            –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ª
          </button>
        </div>
      </section>
    </div>
  );
};

export default HomePage;
